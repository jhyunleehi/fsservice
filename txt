import React, { useEffect, useState } from 'react';
import { useNavigate, useOutletContext } from 'react-router-dom';
import useAuth from '../../hook/useJwt';
import Red from "../../../images/663342.png"
import Blue from "../../../images/4567729_app_interface_location_map_pin_icon.png"
import { Modal } from 'bootstrap';


const KakaoMap = () => {
    const navigate = useNavigate();
    const {jwt} = useAuth()
    // Hover the mouse event

    const [isModalOpen, setIsModalOpen] = useState(false)
    const [hoveredAddress, setHoveredAddress] =useState('')
    const [mousePosition, setMousePosition] = useState({x:0, y:0})
    

  const {map, setMap, selectedAddress, setSelectedAddress, selectedMarker, setSelectedMarker, selectedInfo,setSelectedInfo} = useOutletContext();
  const [addresses] = useState([
    {
      address: 'Incheon Bus Terminal',
      status: true,
      latitude: 37.4768,
      longitude: 126.6306,
    },
    {
      address: 'Incheon Immigration Office',
      latitude: 37.4525,
      status:false,
      longitude: 126.6597,
    },
  ]);

  useEffect(() => {
    
    const script = document.createElement('script');
    script.async = true;
    script.src = `https://dapi.kakao.com/v2/maps/sdk.js?appkey=dd3b98a12bc700e0583223f92fe9a912&autoload=false`;
    document.head.appendChild(script);

    script.onload = () => {
      window.kakao.maps.load(() => {
        const container = document.getElementById('map');
        const options = {
          center: new window.kakao.maps.LatLng(37.4000, 126.9595),
          level: 10,
        };
        const mapInstance = new window.kakao.maps.Map(container, options);
        setMap(mapInstance);

        // Create markers for each address
        addresses.forEach((address) => {
          const markerPosition = new window.kakao.maps.LatLng(address.latitude, address.longitude);


         
          const marker = new window.kakao.maps.Marker({
            position: markerPosition,
            image:  new window.kakao.maps.MarkerImage(address.status ? Blue : Red,  new window.kakao.maps.Size(50, 50))
           
          });

          // Add click event listener to each marker
          window.kakao.maps.event.addListener(marker, 'click', () => {
            setSelectedMarker(marker);
            setSelectedAddress(address);
            //navigate(`/map/${address.id}`)
            navigate('/map/1');
            
          });

          // showing the address when hovering

         window.kakao.maps.event.addListener(marker, 'mouseover', (event) => {
          
          setHoveredAddress(address.address)
          setMousePosition({x: event.pageX, y: event.pageY})
          setIsModalOpen(true)
        });

        window.kakao.maps.event.addListener(marker, 'mouseout', () => {
          setHoveredAddress('')
          setIsModalOpen(false)
        });



          marker.setMap(mapInstance);
        });
      });
    };
  }, []);

  useEffect(() => {
    if (map && selectedMarker) {
      // Set the map center and level to the selected marker
      map.setCenter(selectedMarker.getPosition());
      map.setLevel(3);
    }
  }, [map, selectedMarker]);

  return (
    <div style={{ display: 'flex', justifyContent: 'left', alignItems: 'center' ,height:'74vh'}}>
      <div  id="map" style={{ width: '100%', height: '90%', border:"none", borderRadius:'3%'}}></div>
      {isModalOpen && <Modal  isOpen={isModalOpen} onClose={()=>setIsModalOpen(false)} address = {{address:hoveredAddress,x:mousePosition.x, y:mousePosition.y}}/>}
    </div>
  );
};

export default KakaoMap;